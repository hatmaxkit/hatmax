# Generated by hatmax. Do not edit.

.PHONY: all build run test clean lint tidy fmt tidy-fmt quick-test

APP_NAME := todo
BUILD_DIR := .
BIN_NAME := $(APP_NAME)
GO_VERSION := 1.22.7 # Or get from go.mod

all: build

build: tidy-fmt
	@echo "Building $(BIN_NAME)..."
	@go build -o $(BUILD_DIR)/$(BIN_NAME) ./main.go
	@echo "$(BIN_NAME) built successfully."

run: build
	@echo "Running $(BIN_NAME)..."
	@$(BUILD_DIR)/$(BIN_NAME)

test:
	@echo "Running tests..."
	@go test -v ./...

clean:
	@echo "Cleaning up..."
	@rm -f $(BUILD_DIR)/$(BIN_NAME)
	@go clean
	@echo "Cleanup complete."

lint:
	@echo "Running linter..."
	@go vet ./...
	# Add more linters if needed, e.g., golangci-lint
	@echo "Linter complete."

tidy:
	@echo "Running go mod tidy..."
	@go mod tidy
	@echo "go mod tidy complete."

fmt:
	@echo "Formatting code..."
	@gofmt -w .
	@if command -v goimports >/dev/null 2>&1; then \
		echo "Running goimports..."; \
		goimports -w .; \
	else \
		echo "goimports not found, skipping import organization"; \
	fi
	@echo "Formatting complete."

tidy-fmt: tidy fmt
	@echo "Tidy and formatting complete."

# Temp handy quick test for this service
quick-test: build
	@echo "Quick testing $(BIN_NAME)..."
	@echo "Cleaning up any existing processes on port 8080..."
	@lsof -ti:8080 | xargs -r kill || true
	@sleep 1
	@timeout 5s bash -c './$(BIN_NAME) & sleep 2 && curl -s http://localhost:8080/items && echo "\n✅ Quick test successful"' || echo "⚠️  Quick test completed (timeout expected)"
	@echo "Quick test complete."
